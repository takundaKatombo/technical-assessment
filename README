Project Structure
The project is divided into three main parts:

admin_dashboard: The admin interface for managing groups and users.
frontend: The user-facing client application.
backend: The server-side API that provides data to the admin dashboard and frontend.
Each part has its own set of dependencies and can be run independently for development purposes.

admin_dashboard
The admin_dashboard directory contains the React application for the administrative interface.

/admin_dashboard
  /public
  /src
    /components
    /services
    /hooks
    /utils
    index.js
    App.js
  package.json
frontend
The frontend directory contains the React application for the end-user interface.


/frontend
  /public
  /src
    /components
    /services
    /hooks
    /utils
    index.js
    App.js
  package.json
backend
The backend directory contains the Flask application for the server-side API.


/backend
  /admin
  /chat
  /groups
  /user
  __init__.py
  run.py
  requirements.txt

## Firebase Configuration

To configure Firebase, add your Firebase project's configuration to your application as follows:


{
  "apiKey": "YOUR_API_KEY",
  "authDomain": "YOUR_PROJECT_ID.firebaseapp.com",
  "databaseURL": "https://YOUR_PROJECT_ID.firebaseio.com",
  "projectId": "YOUR_PROJECT_ID",
  "storageBucket": "YOUR_PROJECT_ID.appspot.com",
  "messagingSenderId": "YOUR_SENDER_ID",
  "appId": "YOUR_APP_ID",
  "measurementId": "YOUR_MEASUREMENT_ID"
}
Replace the placeholders with your actual Firebase project settings. This information can be found in your Firebase console.

Place the above JSON in  `/backend/keys`.

Security Reminder:

**Note:** Never commit your Firebase configuration JSON with real API keys to a public repository. Always use environment variables or another secure method to protect your credentials.

Prerequisites
Node.js and npm (https://nodejs.org/en/)
Python and pip (https://www.python.org/)
Flask installed (https://flask.palletsprojects.com/en/1.1.x/installation/)
Setup and Installation
Backend
Navigate to the backend directory.
Install the required Python packages:

pip install -r requirements.txt
Start the Flask server:

python run.py
The backend API will be available at http://localhost:8080.

Admin Dashboard
Navigate to the admin_dashboard directory.
Install the required Node.js packages:

npm install
Start the React development server:

npm start
The admin dashboard will be available at http://localhost:3000.

Frontend
Navigate to the frontend directory.
Install the required Node.js packages:

npm install
Start the React development server:

npm start
The frontend application will be available at http://localhost:3000.

Running the Applications
Each part of the project can be started with the following commands from their respective directories:

For the backend:

python run.py

For the admin_dashboard:

npm start

For the frontend:

npm start
